package interviewbit.twopointers;

import static org.testng.Assert.assertEquals;

import java.util.ArrayList;
import java.util.Arrays;

import org.testng.annotations.Test;

public class MinimizeTheAbsoluteDifferenceTest {
  //A : [ 1, 4, 5, 8, 10 ]
  //B : [ 6, 9, 15 ]
  //C : [ 2, 3, 6, 6 ]
  @Test
  public void solve() {
    MinimizeTheAbsoluteDifference m = new MinimizeTheAbsoluteDifference();
    assertEquals(
        1,
        m.solve(
            new ArrayList<Integer>(Arrays.asList(1, 4, 5, 8, 10)),
            new ArrayList<Integer>(Arrays.asList(6, 9, 15)),
            new ArrayList<Integer>(Arrays.asList(2, 3, 6, 6))));
    assertEquals(
        0,
        m.solve(
            new ArrayList<Integer>(Arrays.asList(1, 4, 6, 8, 10)),
            new ArrayList<Integer>(Arrays.asList(6, 9, 15)),
            new ArrayList<Integer>(Arrays.asList(2, 3, 6, 6))));
    assertEquals(
        0,
        m.solve(
            new ArrayList<Integer>(Arrays.asList(1)),
            new ArrayList<Integer>(Arrays.asList(1)),
            new ArrayList<Integer>(Arrays.asList(1))));
    assertEquals(
        2,
        m.solve(
            new ArrayList<Integer>(Arrays.asList(1)),
            new ArrayList<Integer>(Arrays.asList(2)),
            new ArrayList<Integer>(Arrays.asList(3))));
    assertEquals(
        1,
        m.solve(
            new ArrayList<Integer>(
                Arrays.asList(
                    52, 94, 109, 149, 186, 214, 218, 235, 236, 285, 324, 352, 390, 393, 409, 445,
                    485, 498, 545, 582, 625, 630, 643, 657, 690, 731, 757, 783, 806, 807, 856, 895,
                    895, 916, 944, 987, 997, 1033, 1054, 1084, 1110, 1140, 1150, 1176, 1208, 1231,
                    1237, 1239, 1261, 1307, 1336, 1374, 1394, 1429, 1457, 1503, 1529, 1542, 1547,
                    1571, 1591, 1624, 1629, 1671, 1687, 1723, 1743)),
            new ArrayList<Integer>(
                Arrays.asList(
                    -255, -245, -218, -206, -181, -157, -113, -84, -41, -40, -37, 12, 22, 68, 98,
                    132, 153, 188, 203, 209, 255, 284, 294, 307, 336, 336, 368, 406, 443, 459, 488,
                    532, 563, 578, 619, 630, 648, 653, 657, 698, 729, 757, 759, 805, 836, 862, 886,
                    912, 931, 962, 990, 1033, 1067, 1114, 1149, 1186, 1225, 1274, 1287, 1287, 1321,
                    1361, 1392, 1430, 1435, 1459, 1491, 1503, 1530, 1552, 1598, 1626, 1638, 1658,
                    1697, 1710, 1748, 1793, 1798, 1798, 1822, 1854, 1871, 1906, 1918, 1961, 1971,
                    2016, 2052, 2080, 2112, 2137, 2158, 2177, 2202)),
            new ArrayList<Integer>(
                Arrays.asList(
                    24, 49, 62, 78, 91, 135, 136, 136, 185, 213, 221, 231, 265, 276, 292, 311, 311,
                    341, 341, 375, 403, 424, 462, 490, 514, 553, 575, 618, 629, 658, 667, 701, 747,
                    761, 778, 814, 837, 844, 867, 913, 943, 951, 984, 1026, 1034, 1060, 1066, 1070,
                    1089, 1121, 1126, 1141, 1188, 1225, 1236, 1270, 1278, 1313, 1335, 1362, 1401,
                    1406, 1429, 1457, 1487, 1527, 1551, 1600, 1619, 1667, 1712, 1751, 1782, 1831,
                    1870, 1892, 1905, 1926, 1948, 1975, 2006, 2036, 2060, 2079))));
    assertEquals(
        2,
        m.solve(
            new ArrayList<Integer>(
                Arrays.asList(
                    -72, -39, -20, 19, 34, 49, 85, 94, 107, 121, 167, 209, 216, 261, 275, 287, 299,
                    315, 332, 361, 386, 393, 394, 414, 445, 481, 492, 514, 562, 598, 615, 655, 696,
                    726, 760, 763, 782, 827, 868, 888, 925, 960, 988, 1025, 1025, 1054, 1066, 1069,
                    1076, 1085, 1113, 1130, 1139, 1152, 1181, 1205, 1250, 1264, 1284, 1316, 1357,
                    1377, 1385, 1406, 1419, 1454, 1498, 1537, 1585, 1610, 1649, 1657, 1664, 1699,
                    1706, 1712, 1731, 1760, 1765, 1810, 1858, 1905, 1934, 1954, 1958, 1966, 1982,
                    2002, 2040, 2043, 2090, 2115, 2130, 2167, 2196, 2236, 2249, 2273, 2318, 2362,
                    2401, 2409, 2455, 2466, 2515, 2550, 2569)),
            new ArrayList<Integer>(
                Arrays.asList(
                    -82, -54, -40, -16, 14, 46, 65, 80, 102, 125, 172, 221, 251, 271, 273, 312, 323,
                    327, 359, 361, 404, 424, 434, 450, 478, 508, 529, 538, 555, 594, 605, 616, 628,
                    667, 688, 720, 756, 762, 799, 809, 822, 870, 915, 947, 987, 1024, 1038, 1061,
                    1080, 1084, 1125, 1169, 1169, 1170, 1173, 1217, 1238, 1267, 1314, 1363, 1395,
                    1419, 1431, 1437, 1461, 1480, 1502, 1536, 1538, 1561, 1579, 1614, 1641, 1690,
                    1727, 1769, 1809, 1843, 1847, 1848, 1859, 1864, 1873, 1905, 1944, 1956, 2004,
                    2031, 2079, 2111, 2123, 2145, 2185, 2207, 2238, 2276)),
            new ArrayList<Integer>(
                Arrays.asList(
                    18, 58, 71, 101, 119, 158, 181, 214, 214, 257, 261, 267, 280, 315, 321, 332,
                    344, 351, 353, 377, 426, 467, 502, 548, 548, 566, 611, 632, 676, 695, 724, 748,
                    769, 809, 858, 890, 895, 940, 958, 1006, 1037, 1061, 1072, 1096, 1124, 1148,
                    1179, 1206, 1234, 1242, 1271, 1308, 1324, 1357, 1398, 1434, 1457, 1464, 1467,
                    1505, 1531, 1535, 1568, 1589, 1593, 1641, 1651, 1666, 1703, 1706, 1716, 1733,
                    1769, 1771, 1808, 1853, 1870, 1898, 1927, 1966, 1969, 1998, 2035, 2051, 2062,
                    2062, 2099, 2132, 2168, 2203, 2252, 2280, 2283, 2306, 2308, 2355, 2379, 2422,
                    2451, 2479, 2496, 2539, 2552, 2587, 2615, 2639, 2671, 2713, 2744, 2785, 2828,
                    2861, 2869))));
  }
}
